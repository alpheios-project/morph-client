!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("alpheios-data-models"));else if("function"==typeof define&&define.amd)define(["alpheios-data-models"],t);else{var r="object"==typeof exports?t(require("alpheios-data-models")):t(e["alpheios-data-models"]);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=9)}([function(t,r){t.exports=e},function(e){e.exports={engine:{lat:["whitakerLat"],grc:["morpheusgrc"],ara:["aramorph"],per:["hazm"]},url:"https://morph.alpheios.net/api/v1/analysis/word?word=r_WORD&engine=r_ENGINE&lang=r_LANG",allowUnknownValues:!0}},function(e){e.exports={texts:["1999.01.0021","1999.01.0135","1999.02.0066","phi0959.phi006.alpheios-text-lat1","tlg0011.tlg003.alpheios-text-grc1","tlg0012.tlg001.alpheios-text-grc1","tlg0012.tlg002.alpheios-text-grc1","tlg0020.tlg001.alpheios-text-grc1","tlg0020.tlg002.alpheios-text-grc1","tlg0020.tlg003.alpheios-text-grc1","tlg0085.tlg001.alpheios-text-grc1","tlg0085.tlg002.alpheios-text-grc1","tlg0085.tlg003.alpheios-text-grc1","tlg0085.tlg004.alpheios-text-grc1","tlg0085.tlg005.alpheios-text-grc1","tlg0085.tlg006.alpheios-text-grc1","tlg0085.tlg007.alpheios-text-grc1","tlg0086.tlg034.alpheios-text-ara2"],url:"http://tools.alpheios.net/exist/rest/db/xq/treebank-getmorph.xq?f=r_TEXT&w=r_WORD",providerUri:"https://alpheios.net",providerRights:"The Alpheios Treebank data is licenced under the Creative Commons 3.0 Share-Alike license.",allowUnknownValues:!0}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:cupidinibus:whitakerLat",creator:{Agent:{about:"net.alpheios:tools:wordsxml.v1"}},created:{$:"2017-08-10T23:15:29.185581"},hasTarget:{Description:{about:"urn:word:cupidinibus"}},title:{},hasBody:[{resource:"urn:uuid:idm140578094883136"},{resource:"urn:uuid:idm140578158026160"}],Body:[{about:"urn:uuid:idm140578094883136",type:{resource:"cnt:ContentAsXML"},rest:{entry:{infl:[{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:2,$:"locative"},num:{$:"plural"},gend:{$:"masculine"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:5,$:"dative"},num:{$:"plural"},gend:{$:"masculine"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:3,$:"ablative"},num:{$:"plural"},gend:{$:"masculine"}}],dict:{hdwd:{lang:"lat",$:"Cupido, Cupidinis"},pofs:{order:5,$:"noun"},decl:{$:"3rd"},gend:{$:"masculine"},area:{$:"religion"},freq:{order:4,$:"common"},src:{$:"Ox.Lat.Dict."}},mean:{$:"Cupid, son of Venus; personification of carnal desire;"}}}},{about:"urn:uuid:idm140578158026160",type:{resource:"cnt:ContentAsXML"},rest:{entry:{infl:[{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:2,$:"locative"},num:{$:"plural"},gend:{$:"common"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:5,$:"dative"},num:{$:"plural"},gend:{$:"common"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:3,$:"ablative"},num:{$:"plural"},gend:{$:"common"}}],dict:{hdwd:{lang:"lat",$:"cupido, cupidinis"},pofs:{order:5,$:"noun"},decl:{$:"3rd"},gend:{$:"common"},freq:{order:5,$:"frequent"},src:{$:"Ox.Lat.Dict."}},mean:{$:"desire/love/wish/longing (passionate); lust; greed, appetite; desire for gain;"}}}}]}}}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:mare:morpheuslat",creator:{Agent:{about:"org.perseus:tools:morpheus.v1"}},created:{$:"2017-09-08T06:59:48.639180"},rights:{$:"Morphology provided by Morpheus from the Perseus Digital Library at Tufts University."},hasTarget:{Description:{about:"urn:word:mare"}},title:{},hasBody:[{resource:"urn:uuid:idm140446402389888"},{resource:"urn:uuid:idm140446402332400"},{resource:"urn:uuid:idm140446402303648"}],Body:[{about:"urn:uuid:idm140446402389888",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34070.1",dict:{hdwd:{lang:"lat",$:"mare"},pofs:{order:3,$:"noun"},decl:{$:"3rd"},gend:{$:"neuter"}},infl:[{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}},{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:7,$:"nominative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}},{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:1,$:"vocative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}},{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:4,$:"accusative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}}],mean:{$:"the sea"}}}},{about:"urn:uuid:idm140446402332400",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34118.1",dict:{hdwd:{lang:"lat",$:"marum"},pofs:{order:3,$:"noun"},decl:{$:"2nd"},gend:{$:"neuter"}},infl:{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"2nd"},case:{order:1,$:"vocative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"us_i"}}}}},{about:"urn:uuid:idm140446402303648",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34119.1",dict:{hdwd:{lang:"lat",$:"mas"},pofs:{order:2,$:"adjective"},decl:{$:"3rd"}},infl:[{term:{lang:"lat",stem:{$:"mare"}},pofs:{order:2,$:"adjective"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"masculine"},num:{$:"singular"},stemtype:{$:"irreg_adj3"},morph:{$:"indeclform"}},{term:{lang:"lat",stem:{$:"mare"}},pofs:{order:2,$:"adjective"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"feminine"},num:{$:"singular"},stemtype:{$:"irreg_adj3"},morph:{$:"indeclform"}},{term:{lang:"lat",stem:{$:"mare"}},pofs:{order:2,$:"adjective"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"irreg_adj3"},morph:{$:"indeclform"}}]}}}]}}}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:cepit:whitakerLat",creator:{Agent:{about:"net.alpheios:tools:wordsxml.v1"}},created:{$:"2017-08-10T23:16:53.672068"},hasTarget:{Description:{about:"urn:word:cepit"}},title:{},hasBody:{resource:"urn:uuid:idm140578133848416"},Body:{about:"urn:uuid:idm140578133848416",type:{resource:"cnt:ContentAsXML"},rest:{entry:{infl:{term:{lang:"lat",stem:{$:"cep"},suff:{$:"it"}},pofs:{order:3,$:"verb"},conj:{$:"3rd"},var:{$:"1st"},tense:{$:"perfect"},voice:{$:"active"},mood:{$:"indicative"},pers:{$:"3rd"},num:{$:"singular"}},dict:{hdwd:{lang:"lat",$:"capio, capere, cepi, captus"},pofs:{order:3,$:"verb"},conj:{$:"3rd"},kind:{$:"transitive"},freq:{order:6,$:"very frequent"},src:{$:"Ox.Lat.Dict."}},mean:{$:"take hold, seize; grasp; take bribe; arrest/capture; put on; occupy; captivate;"}}}}}}}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:φιλόσοφος:morpheuslat",creator:{Agent:{about:"org.perseus:tools:morpheus.v1"}},created:{$:"2017-10-15T14:06:40.522369"},hasTarget:{Description:{about:"urn:word:φιλόσοφος"}},title:{},hasBody:{resource:"urn:uuid:idm140446394225264"},Body:{about:"urn:uuid:idm140446394225264",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:grclexent.lex78378.1",dict:{hdwd:{lang:"grc",$:"φιλόσοφος"},pofs:{order:3,$:"noun"},decl:{$:"2nd"},gend:{$:"masculine"}},infl:{term:{lang:"grc",stem:{$:"φιλοσοφ"},suff:{$:"ος"}},pofs:{order:3,$:"noun"},decl:{$:"2nd"},case:{order:7,$:"nominative"},gend:{$:"masculine"},num:{$:"singular"},stemtype:{$:"os_ou"}}}}}}}}},function(e,t,r){(function(e){var n,a=function(){this.version="1.3.5";var e={mergeCDATA:!0,grokAttr:!0,grokText:!0,normalize:!0,xmlns:!0,namespaceKey:"_ns",textKey:"_text",valueKey:"_value",attrKey:"_attr",cdataKey:"_cdata",attrsAsObject:!0,stripAttrPrefix:!0,stripElemPrefix:!0,childrenAsArray:!0},t=new RegExp(/(?!xmlns)^.*:/),r=new RegExp(/^\s+|\s+$/g);return this.grokType=function(e){return/^\s*$/.test(e)?null:/^(?:true|false)$/i.test(e)?"true"===e.toLowerCase():isFinite(e)?parseFloat(e):e},this.parseString=function(e,t){return this.parseXML(this.stringToXML(e),t)},this.parseXML=function(n,o){for(var s in o)e[s]=o[s];var i={},l=0,u="";if(e.xmlns&&n.namespaceURI&&(i[e.namespaceKey]=n.namespaceURI),n.attributes&&n.attributes.length>0){for(var c={};l<n.attributes.length;l++){var d=n.attributes.item(l);f={};var p="";p=e.stripAttrPrefix?d.name.replace(t,""):d.name,e.grokAttr?f[e.valueKey]=this.grokType(d.value.replace(r,"")):f[e.valueKey]=d.value.replace(r,""),e.xmlns&&d.namespaceURI&&(f[e.namespaceKey]=d.namespaceURI),e.attrsAsObject?c[p]=f:i[e.attrKey+p]=f}e.attrsAsObject&&(i[e.attrKey]=c)}if(n.hasChildNodes())for(var m,g,f,h=0;h<n.childNodes.length;h++)4===(m=n.childNodes.item(h)).nodeType?e.mergeCDATA?u+=m.nodeValue:i.hasOwnProperty(e.cdataKey)?(i[e.cdataKey].constructor!==Array&&(i[e.cdataKey]=[i[e.cdataKey]]),i[e.cdataKey].push(m.nodeValue)):e.childrenAsArray?(i[e.cdataKey]=[],i[e.cdataKey].push(m.nodeValue)):i[e.cdataKey]=m.nodeValue:3===m.nodeType?u+=m.nodeValue:1===m.nodeType&&(0===l&&(i={}),g=e.stripElemPrefix?m.nodeName.replace(t,""):m.nodeName,f=a.parseXML(m),i.hasOwnProperty(g)?(i[g].constructor!==Array&&(i[g]=[i[g]]),i[g].push(f)):(e.childrenAsArray?(i[g]=[],i[g].push(f)):i[g]=f,l++));else u||(e.childrenAsArray?(i[e.textKey]=[],i[e.textKey].push(null)):i[e.textKey]=null);if(u)if(e.grokText){var y=this.grokType(u.replace(r,""));null!==y&&void 0!==y&&(i[e.textKey]=y)}else e.normalize?i[e.textKey]=u.replace(r,"").replace(/\s+/g," "):i[e.textKey]=u.replace(r,"");return i},this.xmlToString=function(e){try{return e.xml?e.xml:(new XMLSerializer).serializeToString(e)}catch(e){return null}},this.stringToXML=function(e){try{var t=null;return window.DOMParser?t=(new DOMParser).parseFromString(e,"text/xml"):((t=new ActiveXObject("Microsoft.XMLDOM")).async=!1,t.loadXML(e),t)}catch(e){return null}},this}.call({});void 0!==e&&null!==e&&e.exports?e.exports=a:void 0===(n=function(){return a}.call(t,r,t,e))||(e.exports=n)}).call(this,r(8)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){"use strict";r.r(t);var n=r(0);var a=class{prepareRequestUrl(e,t){return null}async getHomonym(e,t){}fetch(e,t){const r=n.LanguageModelFactory.getLanguageCodeFromId(e);let a=this.prepareRequestUrl(r,t);return new Promise((t,r)=>{a?window.fetch(a).then(function(e){try{if(e.ok){let r=e.json();t(r)}else r(e.statusText)}catch(e){r(e)}}).catch(e=>{r(e)}):r(new Error(`Unable to prepare parser request url for ${e.toString()}`))})}fetchTestData(e,t){return new Promise((e,t)=>{try{e({})}catch(e){t(e)}})}transform(e,t){return{}}};var o=class{constructor(e,t){this.model=e,this.engine=t;for(let e of Object.keys(this.model.features))this.addFeature(e);this.aggregateLexemes=function(e,t){let r=[];for(let n of e)this.reportLexeme(n)&&(n.inflections=t,r.push(n));return r},this.parseLemma=function(e){return new n.Lemma(e,this.model.languageID)},this.parseProperty=function(e,t){let r=[];return r="decl"===e?t.split("&").map(e=>e.trim()):"comp"===e&&"positive"===t?[]:[t]},this.reportLexeme=function(e){return e.lemma.features[n.Feature.types.part]}}addFeature(e){this[e]={};let t=this.model;return this[e].add=function(e,t){return this[e]=t,this},this[e].get=function(r,n=1,a=!1){let o=[];if(this.importer.has(r)){let a=this.importer.get(r);o=Array.isArray(a)?t.typeFeature(e).createFeatures(a,n):t.typeFeature(e).createFeature(a,n)}else if(t.typeFeature(e).hasValue(r)||t.typeFeature(e).valuesUnrestricted)o=t.typeFeature(e).createFeature(r,n);else{let s=`Unknown value "${r}" of feature "${e}" for ${t.languageCode} (allowed = ${a})`;if(!a)throw new Error(s);console.log(s),o=t.typeFeature(e).createFeature(r,n)}return o},this[e].getMultiple=function(r,n=!1){let a=[];for(const o of r)if(this.importer.has(o.providerValue)){let e=this.importer.get(o.providerValue);a=Array.isArray(e)?e:[[e,o.sortOrder]]}else if(t.typeFeature(e).hasValue(o.providerValue)||t.typeFeature(e).valuesUnrestricted)a.push([o.providerValue,o.sortOrder]);else{let r=`Unknown value "${o.providerValue}" of feature "${e}" for ${t.languageCode} (allowed = ${n})`;if(!n)throw new Error(r);console.log(r),a.push([o.providerValue,o.sortOrder])}return t.typeFeature(e).createFeatures(a)},this[e].importer=new n.FeatureImporter,this[e]}setLexemeAggregator(e){this.aggregateLexemes=e}setLemmaParser(e){this.parseLemma=e}setPropertyParser(e){this.parseProperty=e}setLexemeFilter(e){this.reportLexeme=e}mapFeature(e,t,r,a,o){let s=[],i=t[r];if(i)if(Array.isArray(i))for(let e of i)s.push(...this.parseProperty(r,e.$));else s=this.parseProperty(r,i.$);if(s.length>0){s=s.map(e=>({providerValue:e,sortOrder:i.order?i.order:1}));let t=this[n.Feature.types[a]].getMultiple(s,o);e.addFeature(t)}}};let s=new o(n.LatinLanguageModel,"whitakerLat");s.addFeature(n.Feature.types.gender).importer.map("common",[[n.Constants.GEND_MASCULINE,1],[n.Constants.GEND_FEMININE,2]]).map("all",[[n.Constants.GEND_MASCULINE,1],[n.Constants.GEND_FEMININE,2],[n.Constants.GEND_NEUTER,3]]),s.addFeature(n.Feature.types.tense).importer.map("future_perfect",n.Constants.TENSE_FUTURE_PERFECT),s.setPropertyParser(function(e,t){let r=[];return r="decl"===e?t.split("&").map(e=>e.trim()):"comp"===e&&"positive"===t?[]:"conj"===e&&t.match(/5th|6th|7th|8th/)?[n.Constants.TYPE_IRREGULAR]:[t]}),s.setLexemeAggregator(function(e,t){let r=[];for(let a of e)if(this.reportLexeme(a))if(0===a.meaning.shortDefs.length){for(let o of e)if(o.meaning.shortDefs.length>0&&o.lemma.isFullHomonym(a.lemma)){let e=!0;for(let t of Object.entries(a.lemma.features))if(t[0]!==n.Feature.types.frequency&&t[0]!==n.Feature.types.source&&!t[1].isEqual(o.lemma.features[t[0]])){e=!1;break}e?o.addAltLemma(a.lemma):(a.inflections=t,r.push(a))}}else a.inflections=t,r.push(a);return console.log(`lexemeSet was ${e.length} resulting in ${r.length}`),r}),s.setLemmaParser(function(e){let t,r,a=[],o=e.split(", ");for(let[e,t]of o.entries()){let n=t.split(" ")[0];0===e&&(r=n),a.push(n)}return r&&(t=new n.Lemma(r,this.model.languageCode,a)),t});var i=s;let l=new o(n.GreekLanguageModel,"morpheusgrc");l.addFeature(n.Feature.types.gender).importer.map("masculine feminine",[[n.Constants.GEND_MASCULINE,1],[n.Constants.GEND_FEMININE,2]]),l.addFeature(n.Feature.types.declension).importer.map("1st & 2nd",[[n.Constants.ORD_1ST,1],[n.Constants.ORD_2ND,2]]);var u=l;var c=new o(n.ArabicLanguageModel,"aramorph");let d=new o(n.PersianLanguageModel,"hazm");d.setLexemeFilter(function(e){return Boolean(e.lemma.word)});var p=d,m=r(3),g=r(4),f=r(5),h=r(6);var y=class{constructor(){this._words={cupidinibus:m,mare:g,cepit:f,"φιλόσοφος":h}}get(e){if(this._words.hasOwnProperty(e))return this._words[e];throw new Error(`Word "${e}" does not exist in test data`)}},$=r(1);var w=class extends a{constructor(e={}){super();try{this.config=JSON.parse($)}catch(e){this.config=Object.assign({},$)}Object.assign(this.config,e),this.engineMap=new Map([i,u,c,p].map(e=>[e.engine,e]))}getEngineLanguageMap(e){return this.config.engine[e]?this.engineMap.get(this.config.engine[e][0]):null}prepareRequestUrl(e,t){let r=this.getEngineLanguageMap(e);if(r){let n=r.engine;return this.config.url.replace("r_WORD",t).replace("r_ENGINE",n).replace("r_LANG",e)}return null}fetchTestData(e,t){return new Promise((e,r)=>{try{let n=(new y).get(t);e(JSON.parse(n))}catch(e){r(e)}})}transform(e,t){let r=[],a=e.RDF.Annotation.Body;Array.isArray(a)||(a=a?[a]:[]);let o=e.RDF.Annotation.creator.Agent.about,s="";e.RDF.Annotation.rights&&(s=e.RDF.Annotation.rights.$);let i=new n.ResourceProvider(o,s);for(let e of a){let a,o=e.rest.entry.infl;o?Array.isArray(o)||(o=[o]):o=[];let s=[["pofs","part"],["case","grmCase"],["gend","gender"],["decl","declension"],["conj","conjugation"],["area","area"],["age","age"],["geo","geo"],["freq","frequency"],["note","note"],["pron","pronunciation"],["kind","kind"]];e.rest.entry.dict?Array.isArray(e.rest.entry.dict)?a=e.rest.entry.dict:(!e.rest.entry.dict.hdwd&&o[0].term&&(e.rest.entry.dict.hdwd={},e.rest.entry.dict.hdwd.lang=o[0].term.lang,e.rest.entry.dict.hdwd.$=(o[0].term.prefix?o[0].term.prefix.$:"")+(o[0].term.stem?o[0].term.stem.$:"")+(o[0].term.suff?o[0].term.suff.$:"")),a=[e.rest.entry.dict]):o.length>0&&o[0].term&&(a=[o[0].term]);let l=a[0].hdwd?a[0].hdwd.lang:a[0].lang,u=this.getEngineLanguageMap(l),c=[],d=[];for(let t of a.entries()){let r,o=[],p=t[0],m=t[1];if(m.hdwd&&(r=m.hdwd.$),!r||!l)continue;let g=u.parseLemma(r,l);c.push(g);for(let e of s)u.mapFeature(g,m,...e,this.config.allowUnknownValues);let f=e.rest.entry.mean;if(Array.isArray(f)||(f=[f]),f=f.filter(e=>e),a.length>1){if(f&&f[p]){let e=f[p],t=e.lang?e.lang:"eng";o.push(n.ResourceProvider.getProxy(i,new n.Definition(e.$,t,"text/plain",c[p].word)))}}else{let e=f.map(e=>{let t=e.lang?e.lang:"eng";return n.ResourceProvider.getProxy(i,new n.Definition(e.$,t,"text/plain",g.word))});o.push(...e)}let h=new n.Lexeme(g,[]);h.meaning.appendShortDefs(o),d.push(n.ResourceProvider.getProxy(i,h))}if(0===c.length)continue;let p=[];for(let e of o){let r=e.term.stem?e.term.stem.$:null,a=e.term.suff?e.term.suff.$:null,o=e.term.pref?e.term.pref.$:null,s=e.xmpl?e.xmpl.$:null,i=new n.Inflection(r,u.model.languageID,a,o,s);t&&i.addFeature(new n.Feature(n.Feature.types.fullForm,t,u.model.languageID)),u.mapFeature(i,e,"pofs","part",this.config.allowUnknownValues),u.mapFeature(i,e,"case","grmCase",this.config.allowUnknownValues),u.mapFeature(i,e,"decl","declension",this.config.allowUnknownValues),u.mapFeature(i,e,"num","number",this.config.allowUnknownValues),u.mapFeature(i,e,"gend","gender",this.config.allowUnknownValues),u.mapFeature(i,e,"conj","conjugation",this.config.allowUnknownValues),u.mapFeature(i,e,"tense","tense",this.config.allowUnknownValues),u.mapFeature(i,e,"voice","voice",this.config.allowUnknownValues),u.mapFeature(i,e,"mood","mood",this.config.allowUnknownValues),u.mapFeature(i,e,"pers","person",this.config.allowUnknownValues),u.mapFeature(i,e,"comp","comparison",this.config.allowUnknownValues),e.stemtype&&u.mapFeature(i,e,"stemtype","stemtype",this.config.allowUnknownValues),e.derivtype&&u.mapFeature(i,e,"derivtype","derivtype",this.config.allowUnknownValues),e.dial&&u.mapFeature(i,e,"dial","dialect",this.config.allowUnknownValues),e.morph&&u.mapFeature(i,e,"morph","morph",this.config.allowUnknownValues),(i[n.Feature.types.grmCase]||i[n.Feature.types.tense]||i[n.Feature.types.mood]||i[n.Feature.types.voice]||i[n.Feature.types.person]||i[n.Feature.types.comparison]||i[n.Feature.types.stemtype]||i[n.Feature.types.derivtype]||i[n.Feature.types.dialect]||i[n.Feature.types.morph]||i[n.Feature.types.example])&&p.push(i);for(let t of c)t.features[n.Feature.types.part]||u.mapFeature(t,e,"pofs","part",this.config.allowUnknownValues),t.features[n.Feature.types.declension]||t.features[n.Feature.types.part]&&!t.features[n.Feature.types.part].isEqual(i[n.Feature.types.part])||u.mapFeature(t,e,"decl","declension",this.config.allowUnknownValues),t.features[n.Feature.types.conjugation]||t.features[n.Feature.types.part]&&!t.features[n.Feature.types.part].isEqual(i[n.Feature.types.part])||u.mapFeature(t,e,"conj","conjugation",this.config.allowUnknownValues)}let m=u.aggregateLexemes(d,p);r.push(...m)}return r.length>0?new n.Homonym(r,t):void 0}async getHomonym(e,t){let r=await this.fetch(e,t);if(r){let e=this.transform(r,t);return e.lexemes.sort(n.Lexeme.getSortByTwoLemmaFeatures(n.Feature.types.frequency,n.Feature.types.part)),e}}},v=r(2),x=r(7),F=r.n(x);var b=class extends a{constructor(e={}){super();try{this.config=JSON.parse(v)}catch(e){this.config=Object.assign({},v)}Object.assign(this.config,e),this.models={lat:n.LatinLanguageModel,grc:n.GreekLanguageModel}}prepareRequestUrl(e,t){let r,[n,a]=t.split(/#/);return this.config.texts.includes(n)&&(r=(r=this.config.url.replace("r_TEXT",n)).replace("r_WORD",a)),r}fetch(e,t){const r=n.LanguageModelFactory.getLanguageCodeFromId(e);let a=this.prepareRequestUrl(r,t);return new Promise((e,r)=>{a?window.fetch(a).then(function(t){try{if(t.ok){let r=t.text();e(r)}else r(t.statusText)}catch(e){r(e)}}).catch(e=>{r(e)}):r(new Error(`Invalid or unknown reference ${t}`))})}transform(e,t){let r=this.config.providerUri,a=this.config.providerRights,o=new n.ResourceProvider(r,a),s=e.words[0].word[0].entry[0].dict[0].hdwd[0],i=s._text;i=i.replace(/\d+$/,"");let l=this.models[s._attr.lang._value],u=new n.Lemma(i,l.languageCode),c=new n.Lexeme(u,[]),d=new n.Inflection(i,l.languageID,null,null,null),p=e.words[0].word[0].entry[0].infl[0];d.addFeature(new n.Feature(n.Feature.types.fullForm,t,l.languageID));let m=[["pofs","part",!0],["case","grmCase",!1],["num","number",!1],["gend","gender",!1],["voice","voice",!1],["mood","mood",!1],["pers","person",!1],["comp","comparison",!1]];for(let e of m){let t=e[0],r=e[1],a=e[2];if(p[t]){let e=l.typeFeature(n.Feature.types[r]).createFeatures(p[t][0]._text,1);d.addFeature(e),a&&u.addFeature(e)}}return c.inflections=[d],new n.Homonym([n.ResourceProvider.getProxy(o,c)],t)}async getHomonym(e,t){let r=await this.fetch(e,t);if(r){let t=this.getLanguageCode(e);console.log(`LangCode ${t}`);let n=F.a.parseString(r);return n.words[0].word[0].entry[0].dict[0].hdwd[0]._attr={lang:{_value:t}},this.transform(n,n.words[0].word[0].form[0]._text)}}getLanguageCode(e){return n.LanguageModelFactory.getLanguageCodeFromId(e)}};r.d(t,"BaseAdapter",function(){return a}),r.d(t,"AlpheiosTuftsAdapter",function(){return w}),r.d(t,"AlpheiosTreebankAdapter",function(){return b})}])});