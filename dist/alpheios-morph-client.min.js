!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("alpheios-data-models"));else if("function"==typeof define&&define.amd)define(["alpheios-data-models"],t);else{var r="object"==typeof exports?t(require("alpheios-data-models")):t(e["alpheios-data-models"]);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=6)}([function(t,r){t.exports=e},function(e){e.exports={engine:{lat:["whitakerLat"],grc:["morpheusgrc"],ara:["aramorph"],per:["hazm"]},url:"https://morph.alpheios.net/api/v1/analysis/word?word=r_WORD&engine=r_ENGINE&lang=r_LANG",allowUnknownValues:!0}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:φιλόσοφος:morpheuslat",creator:{Agent:{about:"org.perseus:tools:morpheus.v1"}},created:{$:"2017-10-15T14:06:40.522369"},hasTarget:{Description:{about:"urn:word:φιλόσοφος"}},title:{},hasBody:{resource:"urn:uuid:idm140446394225264"},Body:{about:"urn:uuid:idm140446394225264",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:grclexent.lex78378.1",dict:{hdwd:{lang:"grc",$:"φιλόσοφος"},pofs:{order:3,$:"noun"},decl:{$:"2nd"},gend:{$:"masculine"}},infl:{term:{lang:"grc",stem:{$:"φιλοσοφ"},suff:{$:"ος"}},pofs:{order:3,$:"noun"},decl:{$:"2nd"},case:{order:7,$:"nominative"},gend:{$:"masculine"},num:{$:"singular"},stemtype:{$:"os_ou"}}}}}}}}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:cepit:whitakerLat",creator:{Agent:{about:"net.alpheios:tools:wordsxml.v1"}},created:{$:"2017-08-10T23:16:53.672068"},hasTarget:{Description:{about:"urn:word:cepit"}},title:{},hasBody:{resource:"urn:uuid:idm140578133848416"},Body:{about:"urn:uuid:idm140578133848416",type:{resource:"cnt:ContentAsXML"},rest:{entry:{infl:{term:{lang:"lat",stem:{$:"cep"},suff:{$:"it"}},pofs:{order:3,$:"verb"},conj:{$:"3rd"},var:{$:"1st"},tense:{$:"perfect"},voice:{$:"active"},mood:{$:"indicative"},pers:{$:"3rd"},num:{$:"singular"}},dict:{hdwd:{lang:"lat",$:"capio, capere, cepi, captus"},pofs:{order:3,$:"verb"},conj:{$:"3rd"},kind:{$:"transitive"},freq:{order:6,$:"very frequent"},src:{$:"Ox.Lat.Dict."}},mean:{$:"take hold, seize; grasp; take bribe; arrest/capture; put on; occupy; captivate;"}}}}}}}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:mare:morpheuslat",creator:{Agent:{about:"org.perseus:tools:morpheus.v1"}},created:{$:"2017-09-08T06:59:48.639180"},rights:{$:"Morphology provided by Morpheus from the Perseus Digital Library at Tufts University."},hasTarget:{Description:{about:"urn:word:mare"}},title:{},hasBody:[{resource:"urn:uuid:idm140446402389888"},{resource:"urn:uuid:idm140446402332400"},{resource:"urn:uuid:idm140446402303648"}],Body:[{about:"urn:uuid:idm140446402389888",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34070.1",dict:{hdwd:{lang:"lat",$:"mare"},pofs:{order:3,$:"noun"},decl:{$:"3rd"},gend:{$:"neuter"}},infl:[{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}},{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:7,$:"nominative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}},{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:1,$:"vocative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}},{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"3rd"},case:{order:4,$:"accusative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"is_is"}}],mean:{$:"the sea"}}}},{about:"urn:uuid:idm140446402332400",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34118.1",dict:{hdwd:{lang:"lat",$:"marum"},pofs:{order:3,$:"noun"},decl:{$:"2nd"},gend:{$:"neuter"}},infl:{term:{lang:"lat",stem:{$:"mar"},suff:{$:"e"}},pofs:{order:3,$:"noun"},decl:{$:"2nd"},case:{order:1,$:"vocative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"us_i"}}}}},{about:"urn:uuid:idm140446402303648",type:{resource:"cnt:ContentAsXML"},rest:{entry:{uri:"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34119.1",dict:{hdwd:{lang:"lat",$:"mas"},pofs:{order:2,$:"adjective"},decl:{$:"3rd"}},infl:[{term:{lang:"lat",stem:{$:"mare"}},pofs:{order:2,$:"adjective"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"masculine"},num:{$:"singular"},stemtype:{$:"irreg_adj3"},morph:{$:"indeclform"}},{term:{lang:"lat",stem:{$:"mare"}},pofs:{order:2,$:"adjective"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"feminine"},num:{$:"singular"},stemtype:{$:"irreg_adj3"},morph:{$:"indeclform"}},{term:{lang:"lat",stem:{$:"mare"}},pofs:{order:2,$:"adjective"},decl:{$:"3rd"},case:{order:3,$:"ablative"},gend:{$:"neuter"},num:{$:"singular"},stemtype:{$:"irreg_adj3"},morph:{$:"indeclform"}}]}}}]}}}},function(e){e.exports={RDF:{Annotation:{about:"urn:TuftsMorphologyService:cupidinibus:whitakerLat",creator:{Agent:{about:"net.alpheios:tools:wordsxml.v1"}},created:{$:"2017-08-10T23:15:29.185581"},hasTarget:{Description:{about:"urn:word:cupidinibus"}},title:{},hasBody:[{resource:"urn:uuid:idm140578094883136"},{resource:"urn:uuid:idm140578158026160"}],Body:[{about:"urn:uuid:idm140578094883136",type:{resource:"cnt:ContentAsXML"},rest:{entry:{infl:[{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:2,$:"locative"},num:{$:"plural"},gend:{$:"masculine"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:5,$:"dative"},num:{$:"plural"},gend:{$:"masculine"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:3,$:"ablative"},num:{$:"plural"},gend:{$:"masculine"}}],dict:{hdwd:{lang:"lat",$:"Cupido, Cupidinis"},pofs:{order:5,$:"noun"},decl:{$:"3rd"},gend:{$:"masculine"},area:{$:"religion"},freq:{order:4,$:"common"},src:{$:"Ox.Lat.Dict."}},mean:{$:"Cupid, son of Venus; personification of carnal desire;"}}}},{about:"urn:uuid:idm140578158026160",type:{resource:"cnt:ContentAsXML"},rest:{entry:{infl:[{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:2,$:"locative"},num:{$:"plural"},gend:{$:"common"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:5,$:"dative"},num:{$:"plural"},gend:{$:"common"}},{term:{lang:"lat",stem:{$:"cupidin"},suff:{$:"ibus"}},pofs:{order:5,$:"noun"},decl:{$:"3rd"},var:{$:"1st"},case:{order:3,$:"ablative"},num:{$:"plural"},gend:{$:"common"}}],dict:{hdwd:{lang:"lat",$:"cupido, cupidinis"},pofs:{order:5,$:"noun"},decl:{$:"3rd"},gend:{$:"common"},freq:{order:5,$:"frequent"},src:{$:"Ox.Lat.Dict."}},mean:{$:"desire/love/wish/longing (passionate); lust; greed, appetite; desire for gain;"}}}}]}}}},function(e,t,r){"use strict";r.r(t);var n=class{prepareRequestUrl(e,t){return null}async getHomonym(e,t){}fetch(e,t){let r=this.prepareRequestUrl(e,t);return new Promise((t,n)=>{r?window.fetch(r).then(function(e){try{if(e.ok){let r=e.json();t(r)}else n(e.statusText)}catch(e){n(e)}}).catch(e=>{n(e)}):n(new Error(`Unable to prepare parser request url for ${e}`))})}fetchTestData(e,t){return new Promise((e,t)=>{try{e({})}catch(e){t(e)}})}transform(e,t){return{}}},a=r(0);var o=class{constructor(e,t){this.model=e,this.engine=t;for(let e of Object.keys(this.model.features))this.addFeature(e);this.parseLemma=function(e){return new a.Lemma(e,this.model.languageID)},this.parseProperty=function(e,t){let r=[];return r="decl"===e?t.split("&").map(e=>e.trim()):"comp"===e&&"positive"===t?[]:[t]},this.reportLexeme=function(e){return e.lemma.features[a.Feature.types.part]}}addFeature(e){this[e]={};let t=this.model;return this[e].add=function(e,t){return this[e]=t,this},this[e].get=function(r,n=1,a=!1){let o=[];if(this.importer.has(r)){let a=this.importer.get(r);o=Array.isArray(a)?t.typeFeature(e).createFeatures(a,n):t.typeFeature(e).createFeature(a,n)}else if(t.typeFeature(e).hasValue(r)||t.typeFeature(e).valuesUnrestricted)o=t.typeFeature(e).createFeature(r,n);else{let s=`Unknown value "${r}" of feature "${e}" for ${t.languageCode} (allowed = ${a})`;if(!a)throw new Error(s);console.log(s),o=t.typeFeature(e).createFeature(r,n)}return o},this[e].getMultiple=function(r,n=!1){let a=[];for(const o of r)if(this.importer.has(o.providerValue)){let e=this.importer.get(o.providerValue);a=Array.isArray(e)?e:[[e,o.sortOrder]]}else if(t.typeFeature(e).hasValue(o.providerValue)||t.typeFeature(e).valuesUnrestricted)a.push([o.providerValue,o.sortOrder]);else{let r=`Unknown value "${o.providerValue}" of feature "${e}" for ${t.languageCode} (allowed = ${n})`;if(!n)throw new Error(r);console.log(r),a.push([o.providerValue,o.sortOrder])}return t.typeFeature(e).createFeatures(a)},this[e].importer=new a.FeatureImporter,this[e]}setLemmaParser(e){this.parseLemma=e}setPropertyParser(e){this.parseProperty=e}setLexemeFilter(e){this.reportLexeme=e}mapFeature(e,t,r,n,o){let s=[],i=t[r];if(i)if(Array.isArray(i))for(let e of i)s.push(...this.parseProperty(r,e.$));else s=this.parseProperty(r,i.$);if(s.length>0){s=s.map(e=>({providerValue:e,sortOrder:i.order?i.order:1}));let t=this[a.Feature.types[n]].getMultiple(s,o);e.addFeature(t)}}};let s=new o(a.LatinLanguageModel,"whitakerLat");s.addFeature(a.Feature.types.gender).importer.map("common",[[a.Constants.GEND_MASCULINE,1],[a.Constants.GEND_FEMININE,2]]).map("all",[[a.Constants.GEND_MASCULINE,1],[a.Constants.GEND_FEMININE,2],[a.Constants.GEND_NEUTER,3]]),s.addFeature(a.Feature.types.tense).importer.map("future_perfect",a.Constants.TENSE_FUTURE_PERFECT),s.setLemmaParser(function(e){let t,r,n=[],o=e.split(", ");for(let[e,t]of o.entries()){let a=t.split(" ")[0];0===e&&(r=a),n.push(a)}return r&&(t=new a.Lemma(r,this.model.languageCode,n)),t});var i=s;let u=new o(a.GreekLanguageModel,"morpheusgrc");u.addFeature(a.Feature.types.gender).importer.map("masculine feminine",[[a.Constants.GEND_MASCULINE,1],[a.Constants.GEND_FEMININE,2]]),u.addFeature(a.Feature.types.declension).importer.map("1st & 2nd",[[a.Constants.ORD_1ST,1],[a.Constants.ORD_2ND,2]]);var l=u;var d=new o(a.ArabicLanguageModel,"aramorph");let p=new o(a.PersianLanguageModel,"hazm");p.setLexemeFilter(function(e){return Boolean(e.lemma.word)});var c=p,m=r(5),f=r(4),g=r(3),$=r(2);var h=class{constructor(){this._words={cupidinibus:m,mare:f,cepit:g,"φιλόσοφος":$}}get(e){if(this._words.hasOwnProperty(e))return this._words[e];throw new Error(`Word "${e}" does not exist in test data`)}},y=r(1);var w=class extends n{constructor(e={}){super();try{this.config=JSON.parse(y)}catch(e){this.config=Object.assign({},y)}Object.assign(this.config,e),this.engineMap=new Map([i,l,d,c].map(e=>[e.engine,e]))}getEngineLanguageMap(e){return this.config.engine[e]?this.engineMap.get(this.config.engine[e][0]):null}prepareRequestUrl(e,t){let r=this.getEngineLanguageMap(e);if(r){let n=r.engine;return this.config.url.replace("r_WORD",t).replace("r_ENGINE",n).replace("r_LANG",e)}return null}fetchTestData(e,t){return new Promise((e,r)=>{try{let n=(new h).get(t);e(JSON.parse(n))}catch(e){r(e)}})}transform(e,t){let r=[],n=e.RDF.Annotation.Body;Array.isArray(n)||(n=n?[n]:[]);let o=e.RDF.Annotation.creator.Agent.about,s="";e.RDF.Annotation.rights&&(s=e.RDF.Annotation.rights.$);let i=new a.ResourceProvider(o,s);for(let e of n){let n,o=e.rest.entry.infl;o?Array.isArray(o)||(o=[o]):o=[];let s=[["pofs","part"],["case","grmCase"],["gend","gender"],["decl","declension"],["conj","conjugation"],["area","area"],["age","age"],["geo","geo"],["freq","frequency"],["note","note"],["pron","pronunciation"],["kind","kind"]];e.rest.entry.dict?Array.isArray(e.rest.entry.dict)?n=e.rest.entry.dict:(!e.rest.entry.dict.hdwd&&o[0].term&&(e.rest.entry.dict.hdwd={},e.rest.entry.dict.hdwd.lang=o[0].term.lang,e.rest.entry.dict.hdwd.$=o[0].term.stem.$+o[0].term.suff.$),n=[e.rest.entry.dict]):o.length>0&&o[0].term&&(n=[o[0].term]);let u=n[0].hdwd?n[0].hdwd.lang:n[0].lang,l=this.getEngineLanguageMap(u),d=[],p=[];for(let t of n.entries()){let r,o=[],c=t[0],m=t[1];if(m.hdwd&&(r=m.hdwd.$),!r||!u)continue;let f=l.parseLemma(r,u);d.push(f);for(let e of s)l.mapFeature(f,m,...e,this.config.allowUnknownValues);let g=e.rest.entry.mean;if(Array.isArray(g)||(g=[g]),g=g.filter(e=>e),n.length>1){if(g&&g[c]){let e=g[c],t=e.lang?e.lang:"eng";o.push(a.ResourceProvider.getProxy(i,new a.Definition(e.$,t,"text/plain",d[c].word)))}}else{let e=g.map(e=>{let t=e.lang?e.lang:"eng";return a.ResourceProvider.getProxy(i,new a.Definition(e.$,t,"text/plain",f.word))});o.push(...e)}let $=new a.Lexeme(f,[]);$.meaning.appendShortDefs(o),p.push(a.ResourceProvider.getProxy(i,$))}if(0===d.length)continue;let c=[];for(let e of o){let r=e.term.stem?e.term.stem.$:null,n=e.term.suff?e.term.suff.$:null,o=e.term.pref?e.term.pref.$:null,s=e.xmlle?e.xmpl.$:null,i=new a.Inflection(r,l.model.languageID,n,o,s);t&&i.addFeature(new a.Feature(a.Feature.types.fullForm,t,l.model.languageID)),l.mapFeature(i,e,"pofs","part",this.config.allowUnknownValues),l.mapFeature(i,e,"case","grmCase",this.config.allowUnknownValues),l.mapFeature(i,e,"decl","declension",this.config.allowUnknownValues),l.mapFeature(i,e,"num","number",this.config.allowUnknownValues),l.mapFeature(i,e,"gend","gender",this.config.allowUnknownValues),l.mapFeature(i,e,"conj","conjugation",this.config.allowUnknownValues),l.mapFeature(i,e,"tense","tense",this.config.allowUnknownValues),l.mapFeature(i,e,"voice","voice",this.config.allowUnknownValues),l.mapFeature(i,e,"mood","mood",this.config.allowUnknownValues),l.mapFeature(i,e,"pers","person",this.config.allowUnknownValues),l.mapFeature(i,e,"comp","comparison",this.config.allowUnknownValues),e.stemtype&&l.mapFeature(i,e,"stemtype","stemtype",this.config.allowUnknownValues),e.derivtype&&l.mapFeature(i,e,"derivtype","derivtype",this.config.allowUnknownValues),e.dial&&l.mapFeature(i,e,"dial","dialect",this.config.allowUnknownValues),e.morph&&l.mapFeature(i,e,"morph","morph",this.config.allowUnknownValues),(i[a.Feature.types.grmCase]||i[a.Feature.types.tense]||i[a.Feature.types.mood]||i[a.Feature.types.voice]||i[a.Feature.types.person]||i[a.Feature.types.comparison]||i[a.Feature.types.stemtype]||i[a.Feature.types.derivtype]||i[a.Feature.types.dialect]||i[a.Feature.types.morph]||i[a.Feature.types.example])&&c.push(i);for(let t of d)t.features[a.Feature.types.part]||l.mapFeature(t,e,"pofs","part",this.config.allowUnknownValues),t.features[a.Feature.types.declension]||t.features[a.Feature.types.part]&&!t.features[a.Feature.types.part].isEqual(i[a.Feature.types.part])||l.mapFeature(t,e,"decl","declension",this.config.allowUnknownValues),t.features[a.Feature.types.conjugation]||t.features[a.Feature.types.part]&&!t.features[a.Feature.types.part].isEqual(i[a.Feature.types.part])||l.mapFeature(t,e,"conj","conjugation",this.config.allowUnknownValues)}for(let e of p)l.reportLexeme(e)&&(e.inflections=c,r.push(e))}return r.length>0?new a.Homonym(r,t):void 0}async getHomonym(e,t){let r=await this.fetch(e,t);if(r)return this.transform(r,t)}};r.d(t,"BaseAdapter",function(){return n}),r.d(t,"AlpheiosTuftsAdapter",function(){return w})}])});